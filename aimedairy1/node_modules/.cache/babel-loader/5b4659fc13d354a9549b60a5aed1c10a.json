{"ast":null,"code":"var _jsxFileName = \"/Users/hawwalayanlola/Desktop/AIme\\u0300 Diary/aime_diary/src/pages/authentication/SignUp/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, Grid, TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport AuthPage from \"../../../components/Generic/AuthPage\";\nimport { THEME_COLOR, USER_STORAGE_KEY } from \"../../../helpers/variables\";\nimport useAuthentication from \"../../../hooks/useAuthentication\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = props => {\n  _s();\n\n  const history = useNavigate();\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    username: \"\"\n  });\n  const {\n    register\n  } = useAuthentication(history);\n\n  const changeHandler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm({ ...form,\n      [name]: value\n    });\n  };\n\n  const submitForm = async () => {\n    const {\n      name,\n      username,\n      password,\n      email\n    } = form;\n    if (!email || !password || !name || !username) return alert(\"Please fill the form correctly!\");\n    const response = await register(form);\n\n    if (response) {\n      localStorage.setItem(USER_STORAGE_KEY, JSON.stringify(response));\n      history(\"/home\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthPage, {\n    title: \"Sign Up\",\n    onSubmit: submitForm,\n    data: form,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"column-centered\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xl: 7,\n        lg: 7,\n        md: 7,\n        sm: 7,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"text\",\n          name: \"username\",\n          label: \"Username\",\n          id: \"\",\n          className: \"form__input\",\n          onChange: changeHandler,\n          required: true,\n          inputProps: {\n            style: {\n              fontSize: 16\n            }\n          },\n          InputLabelProps: {\n            style: {\n              fontSize: 16\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xl: 7,\n        lg: 7,\n        md: 7,\n        sm: 7,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"email\",\n          name: \"email\",\n          label: \"Email\",\n          id: \"\",\n          className: \"form__input\",\n          onChange: changeHandler,\n          required: true,\n          inputProps: {\n            style: {\n              fontSize: 16\n            }\n          },\n          InputLabelProps: {\n            style: {\n              fontSize: 16\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xl: 7,\n        lg: 7,\n        md: 7,\n        sm: 7,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"text\",\n          name: \"name\",\n          label: \"Name\",\n          id: \"\",\n          className: \"form__input\",\n          onChange: changeHandler,\n          required: true,\n          inputProps: {\n            style: {\n              fontSize: 16\n            }\n          },\n          InputLabelProps: {\n            style: {\n              fontSize: 16\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xl: 7,\n        lg: 7,\n        md: 7,\n        sm: 7,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"password\",\n          name: \"password\",\n          label: \"Password\",\n          id: \"\",\n          className: \"form__input\",\n          onChange: changeHandler,\n          required: true,\n          inputProps: {\n            style: {\n              fontSize: 16\n            }\n          },\n          InputLabelProps: {\n            style: {\n              fontSize: 16\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"u-margin-top-medium medium-theme-button\",\n          sx: {\n            background: THEME_COLOR,\n            color: \"white\"\n          },\n          onClick: submitForm,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"BXoDZc0RzigIG098ew7sDnM6o2w=\", false, function () {\n  return [useNavigate, useAuthentication];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/hawwalayanlola/Desktop/AImeÌ€ Diary/aime_diary/src/pages/authentication/SignUp/SignUp.js"],"names":["Button","Container","Grid","TextField","React","useState","useNavigate","AuthPage","THEME_COLOR","USER_STORAGE_KEY","useAuthentication","SignIn","props","history","form","setForm","email","password","name","username","register","changeHandler","e","value","target","submitForm","alert","response","localStorage","setItem","JSON","stringify","style","fontSize","background","color"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,EAAkCC,SAAlC,QAAmD,eAAnD;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,4BAA9C;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA;;AACtB,QAAMC,OAAO,GAAGP,WAAW,EAA3B;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAC/BW,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,QAAQ,EAAE,EAFqB;AAG/BC,IAAAA,IAAI,EAAE,EAHyB;AAI/BC,IAAAA,QAAQ,EAAE;AAJqB,GAAD,CAAhC;AAOA,QAAM;AAAEC,IAAAA;AAAF,MAAeV,iBAAiB,CAACG,OAAD,CAAtC;;AAEA,QAAMQ,aAAa,GAAGC,CAAC,IAAI;AACzB,UAAM;AAAEJ,MAAAA,IAAF;AAAQK,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAT,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAACI,IAAD,GAAQK;AAAnB,KAAD,CAAP;AACD,GAHD;;AAKA,QAAME,UAAU,GAAG,YAAY;AAC7B,UAAM;AAAEP,MAAAA,IAAF;AAAQC,MAAAA,QAAR;AAAkBF,MAAAA,QAAlB;AAA4BD,MAAAA;AAA5B,QAAsCF,IAA5C;AACA,QAAI,CAACE,KAAD,IAAU,CAACC,QAAX,IAAuB,CAACC,IAAxB,IAAgC,CAACC,QAArC,EACE,OAAOO,KAAK,CAAC,iCAAD,CAAZ;AACF,UAAMC,QAAQ,GAAG,MAAMP,QAAQ,CAACN,IAAD,CAA/B;;AACA,QAAIa,QAAJ,EAAc;AACZC,MAAAA,YAAY,CAACC,OAAb,CAAqBpB,gBAArB,EAAuCqB,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAvC;AACAd,MAAAA,OAAO,CAAC,OAAD,CAAP;AACD;AACF,GATD;;AAWA,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAC,SAAhB;AAA0B,IAAA,QAAQ,EAAEY,UAApC;AAAgD,IAAA,IAAI,EAAEX,IAAtD;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,iBAA1B;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAgC,QAAA,EAAE,EAAE,CAApC;AAAuC,QAAA,EAAE,EAAE,CAA3C;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAC,UAHR;AAIE,UAAA,EAAE,EAAC,EAJL;AAKE,UAAA,SAAS,EAAC,aALZ;AAME,UAAA,QAAQ,EAAEO,aANZ;AAOE,UAAA,QAAQ,MAPV;AAQE,UAAA,UAAU,EAAE;AAAEW,YAAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ;AAAT,WARd;AASE,UAAA,eAAe,EAAE;AAAED,YAAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ;AAAT;AATnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAcE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAgC,QAAA,EAAE,EAAE,CAApC;AAAuC,QAAA,EAAE,EAAE,CAA3C;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAC,OAHR;AAIE,UAAA,EAAE,EAAC,EAJL;AAKE,UAAA,SAAS,EAAC,aALZ;AAME,UAAA,QAAQ,EAAEZ,aANZ;AAOE,UAAA,QAAQ,MAPV;AAQE,UAAA,UAAU,EAAE;AAAEW,YAAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ;AAAT,WARd;AASE,UAAA,eAAe,EAAE;AAAED,YAAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ;AAAT;AATnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF,eA2BE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAgC,QAAA,EAAE,EAAE,CAApC;AAAuC,QAAA,EAAE,EAAE,CAA3C;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAC,MAHR;AAIE,UAAA,EAAE,EAAC,EAJL;AAKE,UAAA,SAAS,EAAC,aALZ;AAME,UAAA,QAAQ,EAAEZ,aANZ;AAOE,UAAA,QAAQ,MAPV;AAQE,UAAA,UAAU,EAAE;AAAEW,YAAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ;AAAT,WARd;AASE,UAAA,eAAe,EAAE;AAAED,YAAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ;AAAT;AATnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA3BF,eAwCE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAgC,QAAA,EAAE,EAAE,CAApC;AAAuC,QAAA,EAAE,EAAE,CAA3C;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAC,UAHR;AAIE,UAAA,EAAE,EAAC,EAJL;AAKE,UAAA,SAAS,EAAC,aALZ;AAME,UAAA,QAAQ,EAAEZ,aANZ;AAOE,UAAA,QAAQ,MAPV;AAQE,UAAA,UAAU,EAAE;AAAEW,YAAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ;AAAT,WARd;AASE,UAAA,eAAe,EAAE;AAAED,YAAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ;AAAT;AATnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAxCF,eAqDE,QAAC,SAAD;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,SAAS,EAAC,yCADZ;AAEE,UAAA,EAAE,EAAE;AAAEC,YAAAA,UAAU,EAAE1B,WAAd;AAA2B2B,YAAAA,KAAK,EAAE;AAAlC,WAFN;AAGE,UAAA,OAAO,EAAEV,UAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cArDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmED,CA9FD;;GAAMd,M;UACYL,W,EAQKI,iB;;;KATjBC,M;AAgGN,eAAeA,MAAf","sourcesContent":["import { Button, Container, Grid, TextField } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport AuthPage from \"../../../components/Generic/AuthPage\";\r\nimport { THEME_COLOR, USER_STORAGE_KEY } from \"../../../helpers/variables\";\r\nimport useAuthentication from \"../../../hooks/useAuthentication\";\r\n\r\nconst SignIn = props => {\r\n  const history = useNavigate();\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    username: \"\",\r\n  });\r\n\r\n  const { register } = useAuthentication(history);\r\n\r\n  const changeHandler = e => {\r\n    const { name, value } = e.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const submitForm = async () => {\r\n    const { name, username, password, email } = form;\r\n    if (!email || !password || !name || !username)\r\n      return alert(\"Please fill the form correctly!\");\r\n    const response = await register(form);\r\n    if (response) {\r\n      localStorage.setItem(USER_STORAGE_KEY, JSON.stringify(response));\r\n      history(\"/home\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthPage title='Sign Up' onSubmit={submitForm} data={form}>\r\n      <Grid container className='column-centered'>\r\n        <Grid item xl={7} lg={7} md={7} sm={7} xs={8}>\r\n          <TextField\r\n            type='text'\r\n            name='username'\r\n            label='Username'\r\n            id=''\r\n            className='form__input'\r\n            onChange={changeHandler}\r\n            required\r\n            inputProps={{ style: { fontSize: 16 } }}\r\n            InputLabelProps={{ style: { fontSize: 16 } }}\r\n          />\r\n        </Grid>\r\n        <Grid item xl={7} lg={7} md={7} sm={7} xs={8}>\r\n          <TextField\r\n            type='email'\r\n            name='email'\r\n            label='Email'\r\n            id=''\r\n            className='form__input'\r\n            onChange={changeHandler}\r\n            required\r\n            inputProps={{ style: { fontSize: 16 } }}\r\n            InputLabelProps={{ style: { fontSize: 16 } }}\r\n          />\r\n        </Grid>\r\n        <Grid item xl={7} lg={7} md={7} sm={7} xs={8}>\r\n          <TextField\r\n            type='text'\r\n            name='name'\r\n            label='Name'\r\n            id=''\r\n            className='form__input'\r\n            onChange={changeHandler}\r\n            required\r\n            inputProps={{ style: { fontSize: 16 } }}\r\n            InputLabelProps={{ style: { fontSize: 16 } }}\r\n          />\r\n        </Grid>\r\n        <Grid item xl={7} lg={7} md={7} sm={7} xs={8}>\r\n          <TextField\r\n            type='password'\r\n            name='password'\r\n            label='Password'\r\n            id=''\r\n            className='form__input'\r\n            onChange={changeHandler}\r\n            required\r\n            inputProps={{ style: { fontSize: 16 } }}\r\n            InputLabelProps={{ style: { fontSize: 16 } }}\r\n          />\r\n        </Grid>\r\n        <Container>\r\n          <Button\r\n            className='u-margin-top-medium medium-theme-button'\r\n            sx={{ background: THEME_COLOR, color: \"white\" }}\r\n            onClick={submitForm}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </Container>\r\n      </Grid>\r\n    </AuthPage>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}